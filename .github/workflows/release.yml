name: Release

on:
  release:
    types: [published]

jobs:
  publish:
    name: Build and publish to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Read version from package.json
        id: get_version
        shell: bash
        run: |
          set -euo pipefail
          PKG_VERSION=$(bun pm pkg get version | tr -d '"')
          echo "pkg_version=$PKG_VERSION" >> "$GITHUB_OUTPUT"

      - name: Validate release tag format and version match
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ github.event.release.tag_name }}"
          PKG_VERSION="${{ steps.get_version.outputs.pkg_version }}"

          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Release tag '$TAG' is not in vM.m.p format."
            exit 1
          fi

          if [[ "v$PKG_VERSION" != "$TAG" ]]; then
            echo "Error: Tag '$TAG' does not match package.json version 'v$PKG_VERSION'."
            exit 1
          fi

          echo "Tag '$TAG' matches package.json version 'v$PKG_VERSION'."

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build package
        run: bun run build

      - name: Publish to npm
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: bun publish


